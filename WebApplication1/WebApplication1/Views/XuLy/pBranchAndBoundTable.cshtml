@*
    For more information on enabling MVC for empty projects, visit http://go.microsoft.com/fwlink/?LinkID=397860
*@
    @{
        int sltui = ViewBag.SoLuong.Count;
    }
    <h5 class="card-title">Kết quả</h5>

    <table class="mb-0 table table-bordered" id="table-ketqua">
        <thead>
            <tr>
                <th width="35%" style="text-align: center">Danh sách vật</th>
                <th width="35%" style="text-align: center">Những vật được chọn</th>
                <th width="10%" style="text-align: center">Tổng giá trị túi</th>
                <th width="20%" style="text-align: center">Thời gian chạy</th>
            </tr>
        </thead>
        <tbody>
            <tr>
                <td>
                    <div class="card-body">
                        <div class="scroll-area-md">
                            <div class="scrollbar-container ps--active-y">
                                <p>
                                    @foreach(var item in ViewBag.DanhSachVat)
                                    {
                                        <span>(@item.Weight, @item.Value)&nbsp;</span>
                                    }
                                </p>
                            </div>
                        </div>
                    </div>
                </td>
                <td style="text-align: center">
                    @*@foreach (char vat in ViewBag.VatDuocChon)
                    {
                        @vat
                    }*@
                </td>
                <td style="text-align: center">
                    @ViewBag.Tong
                </td>
                <td>
                    @for(int i=0; i < sltui; i++)
                    {
                    <p>
                        @*<span style="font-size: 18px; font-weight: bold">@ViewBag.SoLuong[i] túi:</span>*@
                        <b>@ViewBag.SoLuong[i] túi:</b>
                        <br />
                        <b style="color: #ff9933">Branch and Bound:</b> @(ViewBag.BranchAndBoundTimeList[i]) &micro;s (@(ViewBag.BranchAndBoundTimeList[i] / 1000)ms)
                        <br />
                    </p>
                    }
                </td>
            </tr>
        </tbody>
    </table>

    <script>
        var soluongArray = @Html.Raw(Json.Serialize(ViewBag.SoLuong));
        var bnbTimeArray = @Html.Raw(Json.Serialize(ViewBag.BranchAndBoundTimeList));

        //bnbTimeArray = bnbTimeArray.map(ele => ele * 1000);
    
        var ctx = document.getElementById('myChart').getContext('2d');
        var myChart = new Chart(ctx, {
            type: 'line',
            data: {
                labels: soluongArray,
                datasets: [
                {
                    label: 'Branch and Bound',
                    data: bnbTimeArray,
                    backgroundColor: [
                        'rgba(255, 153, 51, 0.2)',
                        'rgba(255, 153, 51, 0.2)',
                        'rgba(255, 153, 51, 0.2)',
                        'rgba(255, 153, 51, 0.2)',
                        'rgba(255, 153, 51, 0.2)',
                        'rgba(255, 153, 51, 0.2)'
                    ],
                    borderColor: [
                        'rgba(255, 153, 51, 1)',
                        'rgba(255, 153, 51, 1)',
                        'rgba(255, 153, 51, 1)',
                        'rgba(255, 153, 51, 1)',
                        'rgba(255, 153, 51, 1)',
                        'rgba(255, 153, 51, 1)'
                    ],
                    borderWidth: 1
                }
            ]},
            options: {
                scales: {
                    yAxes: [{
                        ticks: {
                            beginAtZero: true
                        }
                    }]
                }
            }
        });
    </script>